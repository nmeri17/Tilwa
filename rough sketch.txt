install turbo

->createQueryBuilder()

->select('u')->from(User::class, 'u')

->where('u.email = ?1')->setParameter(1, $reqData['email']) // this should go in "good to know"

try to deploy on azure

when cacheManager is integrated:
	- refactor its usage wherever it appears in respect to accessing nested objects; tags etc
	- is the override pattern we're using good or can it be updated while in the cache?

#
work needed on updateReactor

what container is used to hydrate handler method on the queued job?

on flow hit, upload the rest into the shared space for all users insted of simply discarding it

AssignListeners::class

we need a cli command for copying laravel config/migrations files from the library locations to dev land i.e. so config can lift the files (from the hard-coded "config" folder)


##controllers and services

Bar:
	- app level service entry into repositories
	- orm in services
Extract rejection logic into a class and inject that into both service wrapper and executable classes. then implement an interface that informs these parents to run x whenever such interface is met

Refactor RouteCollection->getPatterns() to work with a IRouteCollection interface we reflect and exclude methods not matching the interface's methods

Pending:
	- exception renderer
	- testing

User-land test interface doesn't rely on the outer module assembly or index.php in order to access app core. testing bits wanna access that core from anywhere
We use top to bottom approach: interact with the highest level classes, passing down value states that should be there and expecting certain updates/ responses proving we're on track

After/during the time we are working on the internals, as we delve deeper, we reach the controllers. Our aim at this stage is that it returns 200