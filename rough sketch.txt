install eloquent

open an avenue for swapping in as a driver (see methods on the client facing bootstrap class)

use it to derive an authenticated user

move over to the reconstructing the controller actions

breakdown the routes into their various types

open another avenue for swapping in template engine as a driver. The driver class will contain an action method that receives the template, file and data as arguments

in the front controller
	correctly obtain response
	wire in/pull out the active request for this/a route

in the request manager
	changeDestination should
		access active request

		delegate validation and validation failure to it // this->failedValidation

		set validation data on the request/route object

refactor template engine->assignFile to accept view name rather than only working with router. then edit all instances where it was initialized

remember to set response on the request at the end request cycle so redirect callback can pick it 

review the call to RouteManager->findRoute after the new route sytem is put in place

add authenticated user to request body

implement methods on the orm adapter

refactor `findRoute` on routeManager to conform with the new route system

Look into redirect format type, route, template engine. Do a search for facade in those files


validate registration credentials
send mail and create new user
visit email verification link
breathe life to the CRUD actions

->createQueryBuilder()

->select('u')->from(User::class, 'u')

->where('u.email = ?1')->setParameter(1, $reqData['email'])

	use Tilwa\Http\Response\Templating\TemplateEngine;

	new TemplateEngine( $this) // this is the active route. so set when/gives route=>activeRoute

remember to set the container to resolve validator interface to this
	use Validator\RakitValidator;